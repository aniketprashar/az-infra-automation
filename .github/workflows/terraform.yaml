name: "Az Infra Automation Dev"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  TF_LOG: INFO

jobs:
  terraform:
    name: "Az Infra Automation Dev"
    runs-on: ubuntu-latest
    environment: Development

    defaults:
      run:
        shell: bash

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
      STORAGE_ACCOUNT: ${{ vars.STORAGE_ACCOUNT }}
      CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.4

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan

      - name: Add Comment with Plan Results
        id: comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan \n
            \n\`\`\`${{ steps.plan.outputs.stdout }}\`\`\`
            \n*Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
